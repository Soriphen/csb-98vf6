{"version":3,"sources":["components/StudentStyles.js","components/Student.js","components/SearchBarStyles.js","hooks/useKeyPress.js","components/NameSearchBar.js","components/TagSearchBar.js","App.js","index.js"],"names":["StudentStyled","styled","div","StudentPicStyled","img","StudentNameStyled","h1","StudentInfoStyled","StudentDetailsStyled","p","StudentGradesStyled","StudentTagStyled","input","StudentTagBtnStyled","button","props","tagIndex","PlusIcon","icon","faPlus","MinusIcon","faMinus","StudentAverage","student","isClicked","grades","reduce","average","currentVal","index","arr","parseInt","length","map","value","className","StudentTag","handleAddTag","handleRemoveTag","tags","tag","OverlayTrigger","placement","overlay","Tooltip","id","onClick","placeholder","onKeyDown","Student","setStudents","students","studentIndex","searchTag","regexTag","useState","setIsClicked","src","pic","alt","firstName","lastName","email","company","skill","e","studentsCopy","key","target","push","splice","current","filter","some","test","SearchBarStyled","useKeyPress","targetKey","keyPressed","setKeyPressed","downHandler","upHandler","useEffect","window","addEventListener","removeEventListener","NameSearchBar","searchName","regexName","filteredName","useRef","backSpacePress","beforeStudentsChange","type","onChange","replaceAll","RegExp","prevStudents","TagSearchBar","filteredTag","App","studentsWithTags","isLoaded","setIsLoaded","error","setError","fetch","then","res","json","data","forEach","err","message","nameOrTag","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.d2d390c8.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst StudentStyled = styled.div`\r\n  text-align: left;\r\n  padding: 10px 25px;\r\n  border-bottom: 1px solid lightgray;\r\n  @media (max-width: 670px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst StudentPicStyled = styled.img`\r\n  border: 1px solid grey;\r\n  width: 140px;\r\n  height: 140px;\r\n  border-radius: 50%;\r\n  position: relative;\r\n  top: 10px;\r\n  @media (max-width: 670px) {\r\n    top: 0;\r\n    margin: 15px auto;\r\n  }\r\n`;\r\n\r\nconst StudentNameStyled = styled.h1`\r\n  font-weight: 700;\r\n  text-transform: uppercase;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  @media (max-width: 670px) {\r\n    justify-content: center;\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst StudentInfoStyled = styled.div`\r\n  margin-left: 30px;\r\n  width: 100%;\r\n  @media (max-width: 670px) {\r\n    margin: 0;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nconst StudentDetailsStyled = styled.p`\r\n  margin: 0;\r\n  margin-left: 22px;\r\n  @media (max-width: 670px) {\r\n    margin-left: 0;\r\n  }\r\n`;\r\n\r\nconst StudentGradesStyled = styled.p`\r\n  display: flex;\r\n  margin-bottom: 0;\r\n  @media (max-width: 670px) {\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nconst StudentTagStyled = styled.input`\r\n  border: none;\r\n  border-bottom: 1px solid gray;\r\n  margin: 15px 0 15px 20px;\r\n  padding-bottom: 7px;\r\n  padding-left: 5px;\r\n  padding-top: 7px;\r\n  @media (max-width: 670px) {\r\n    margin-left: 0;\r\n    width: calc(60% + 50px);\r\n  }\r\n  @media (max-width: 400px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst StudentTagBtnStyled = styled.button`\r\n  margin-left: ${(props) =>\r\n    props.tagIndex === 0\r\n      ? \"23px\"\r\n      : \"5px\"}; // This is to make the first tag have a margin-left of 23px\r\n  margin-top: 10px;\r\n  @media (max-width: 670px) {\r\n    margin-left: ${(props) => (props.tagIndex === 0 ? \"0\" : \"5px\")};\r\n  }\r\n`;\r\n\r\nexport {\r\n  StudentStyled,\r\n  StudentPicStyled,\r\n  StudentInfoStyled,\r\n  StudentTagStyled,\r\n  StudentTagBtnStyled,\r\n  StudentNameStyled,\r\n  StudentDetailsStyled,\r\n  StudentGradesStyled\r\n};\r\n","import { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  StudentStyled,\r\n  StudentPicStyled,\r\n  StudentInfoStyled,\r\n  StudentTagStyled,\r\n  StudentTagBtnStyled,\r\n  StudentNameStyled,\r\n  StudentDetailsStyled,\r\n  StudentGradesStyled\r\n} from \"./StudentStyles\";\r\nimport { faPlus, faMinus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\n\r\nconst PlusIcon = <FontAwesomeIcon icon={faPlus} />;\r\nconst MinusIcon = <FontAwesomeIcon icon={faMinus} />;\r\n\r\nconst StudentAverage = ({ student, isClicked }) => {\r\n  return (\r\n    <StudentDetailsStyled>\r\n      {\"Average: \" +\r\n        student.grades.reduce((average, currentVal, index, arr) => {\r\n          average += parseInt(currentVal);\r\n          if (index === arr.length - 1) {\r\n            average = average / arr.length;\r\n          }\r\n          return average;\r\n        }, 0) +\r\n        \"%\"}\r\n      {isClicked &&\r\n        student.grades.map((value, index) => (\r\n          <StudentGradesStyled className=\"mb-0 d-flex\">\r\n            Test {index + 1}: <span className=\"ms-4\">{value}%</span>\r\n          </StudentGradesStyled>\r\n        ))}\r\n    </StudentDetailsStyled>\r\n  );\r\n};\r\n\r\nconst StudentTag = ({ student, handleAddTag, handleRemoveTag }) => {\r\n  return (\r\n    <>\r\n      {student.tags.map((tag, tagIndex) => (\r\n        <OverlayTrigger\r\n          key=\"grade-click\"\r\n          placement=\"bottom\"\r\n          overlay={\r\n            <Tooltip id={`tooltip-grades`}>\r\n              <span>\r\n                Click to <strong>Remove</strong> tag\r\n              </span>\r\n            </Tooltip>\r\n          }\r\n        >\r\n          <StudentTagBtnStyled\r\n            className=\"btn btn-secondary\"\r\n            onClick={() => handleRemoveTag(tagIndex)}\r\n            tagIndex={tagIndex}\r\n          >\r\n            {tag}\r\n          </StudentTagBtnStyled>\r\n        </OverlayTrigger>\r\n      ))}\r\n      {student.tags.length > 0 ? <br /> : null}\r\n      <StudentTagStyled placeholder=\"Add a tag\" onKeyDown={handleAddTag} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst Student = ({\r\n  student,\r\n  setStudents,\r\n  students,\r\n  studentIndex,\r\n  searchTag,\r\n  regexTag\r\n}) => {\r\n  const [isClicked, setIsClicked] = useState(false);\r\n\r\n  const handleAddTag = (e) => {\r\n    /* A spread operator is necessary because re-renders don't happen even if the \r\n    state has changed due to the reference value of an array not being changed even \r\n    if you were to edit an item inside of it. Another thing I learned is that even with the spread operator,\r\n    if this const were to be placed outside of this function, then it React would only re-render once for the first\r\n    tag, but then it wouldn't re-render for the subsequent tags that would be entered until something else forces a re-render.\r\n    Therefore this const must be placed in this function to force a re-render for each tag placement. */\r\n    const studentsCopy = [...students];\r\n    if (e.key === \"Enter\" && e.target.value !== \"\") {\r\n      studentsCopy[studentIndex][\"tags\"].push(e.target.value);\r\n      setStudents(studentsCopy); // Something new I learned is that React will only re-render if the state changes with something completely brand new. It can't be done by reference of the old state. Using a spread operator solves this problem.\r\n      e.target.value = \"\";\r\n    }\r\n  };\r\n\r\n  const handleRemoveTag = (tagIndex) => {\r\n    let studentsCopy = [...students];\r\n    studentsCopy[studentIndex][\"tags\"].splice(tagIndex, 1);\r\n\r\n    if (searchTag.current) {\r\n      // This handles the case when the user searches by tag and deletes the tag after students has been filtered.\r\n      studentsCopy = studentsCopy.filter(({ tags }) => {\r\n        return tags.some((tag) => regexTag.current.test(tag));\r\n      });\r\n    }\r\n    setStudents(studentsCopy);\r\n  };\r\n\r\n  const handlePlusMinusClick = () => {\r\n    setIsClicked(!isClicked);\r\n  };\r\n\r\n  return (\r\n    <StudentStyled className=\"d-flex\">\r\n      <StudentPicStyled\r\n        src={student.pic}\r\n        alt={student.firstName + \" \" + student.lastName + \"'s picture\"}\r\n      />\r\n      <StudentInfoStyled>\r\n        <StudentNameStyled>\r\n          {student.firstName + \" \" + student.lastName}\r\n          <OverlayTrigger\r\n            key=\"grade-click\"\r\n            placement=\"bottom\"\r\n            overlay={\r\n              <Tooltip id={`tooltip-grades`}>\r\n                {isClicked ? (\r\n                  <span>\r\n                    Collapse <strong>grades</strong>\r\n                  </span>\r\n                ) : (\r\n                  <span>\r\n                    Expand <strong>grades</strong>\r\n                  </span>\r\n                )}\r\n              </Tooltip>\r\n            }\r\n          >\r\n            <button\r\n              className=\"btn p-0 fs-2 text-muted\"\r\n              onClick={handlePlusMinusClick}\r\n            >\r\n              {isClicked ? MinusIcon : PlusIcon}\r\n            </button>\r\n          </OverlayTrigger>\r\n        </StudentNameStyled>\r\n        <StudentDetailsStyled>{\"Email: \" + student.email}</StudentDetailsStyled>\r\n        <StudentDetailsStyled>\r\n          {\"Company: \" + student.company}\r\n        </StudentDetailsStyled>\r\n        <StudentDetailsStyled>{\"Skill: \" + student.skill}</StudentDetailsStyled>\r\n        <StudentAverage student={student} isClicked={isClicked} />\r\n        <StudentTag\r\n          className=\"d-flex\"\r\n          student={student}\r\n          handleAddTag={handleAddTag}\r\n          handleRemoveTag={handleRemoveTag}\r\n        />\r\n      </StudentInfoStyled>\r\n    </StudentStyled>\r\n  );\r\n};\r\n\r\nexport default Student;\r\n","import styled from \"styled-components\";\r\n\r\nconst SearchBarStyled = styled.input`\r\n  border: none;\r\n  font-size: 1.3rem;\r\n  border-bottom: 1px solid gray;\r\n  width: 98%;\r\n  margin: 10px 0;\r\n  padding-bottom: 7px;\r\n  padding-left: 5px;\r\n  padding-top: 7px;\r\n`;\r\n\r\nexport { SearchBarStyled };\r\n","import { useState, useEffect } from \"react\";\r\n\r\n// useKeyPress custom hook recipe from https://usehooks.com/useKeyPress/ with included comments\r\nfunction useKeyPress(targetKey) {\r\n  // State for keeping track of whether key is pressed\r\n  const [keyPressed, setKeyPressed] = useState(false);\r\n  // If pressed key is our target key then set to true\r\n  function downHandler({ key }) {\r\n    if (key === targetKey) {\r\n      setKeyPressed(true);\r\n    }\r\n  }\r\n  // If released key is our target key then set to false\r\n  const upHandler = ({ key }) => {\r\n    if (key === targetKey) {\r\n      setKeyPressed(false);\r\n    }\r\n  };\r\n  // Add event listeners\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", downHandler);\r\n    window.addEventListener(\"keyup\", upHandler);\r\n    // Remove event listeners on cleanup\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", downHandler);\r\n      window.removeEventListener(\"keyup\", upHandler);\r\n    };\r\n  }, []); // Empty array ensures that effect is only run on mount and unmount\r\n  return keyPressed;\r\n}\r\n\r\nexport default useKeyPress;\r\n","import { useRef } from \"react\";\r\nimport { SearchBarStyled } from \"./SearchBarStyles\";\r\nimport useKeyPress from \"../hooks/useKeyPress\";\r\n\r\nconst NameSearchBar = ({\r\n  students,\r\n  setStudents,\r\n  placeholder,\r\n  searchName,\r\n  searchTag,\r\n  regexName,\r\n  regexTag,\r\n  filteredName\r\n}) => {\r\n  const studentsCopy = useRef([...students]); // I use a useRef so as to keep a copy of students' first state before the re-render changes.\r\n  const backSpacePress = useKeyPress(\"Backspace\");\r\n  const beforeStudentsChange = useRef();\r\n\r\n  const handleFilter = (e) => {\r\n    // If it's the name searchbar commence with filtering targeted towards what is inputted in the name searchbar\r\n    searchName.current = e.target.value.replaceAll(/[\\\\]/gi, \"\\\\\\\\\");\r\n    regexName.current = new RegExp(`^(${searchName.current})`, \"i\");\r\n    if (searchTag.current) {\r\n      filteredName = students.filter(({ firstName, lastName }) => {\r\n        return (\r\n          regexName.current.test(firstName) ||\r\n          regexName.current.test(lastName) ||\r\n          regexName.current.test(firstName + \" \" + lastName)\r\n        );\r\n      });\r\n    } else {\r\n      filteredName = studentsCopy.current.filter(({ firstName, lastName }) => {\r\n        return (\r\n          regexName.current.test(firstName) ||\r\n          regexName.current.test(lastName) ||\r\n          regexName.current.test(firstName + \" \" + lastName)\r\n        );\r\n      });\r\n    }\r\n\r\n    if (searchTag.current === \"\" && searchName.current === \"\") {\r\n      // If both filters are empty then return everything back to default student listing.\r\n      setStudents(studentsCopy.current);\r\n    } else if (backSpacePress) {\r\n      setStudents(\r\n        beforeStudentsChange.current.filter(({ firstName, lastName, tags }) => {\r\n          if (\r\n            regexName.current !== \"\" &&\r\n            searchName.current &&\r\n            !searchTag.current\r\n          ) {\r\n            return (\r\n              regexName.current.test(firstName) ||\r\n              regexName.current.test(lastName) ||\r\n              regexName.current.test(firstName + \" \" + lastName)\r\n            );\r\n          } else {\r\n            return tags.some((tag) => regexTag.current.test(tag));\r\n          }\r\n        })\r\n      );\r\n    } else {\r\n      setStudents((prevStudents) => {\r\n        if (filteredName.length !== prevStudents.length) {\r\n          // When student changes length save a copy of the prev state to beforeStudentsChange.current\r\n          beforeStudentsChange.current = [...prevStudents];\r\n        }\r\n        return filteredName;\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SearchBarStyled\r\n      type=\"text\"\r\n      placeholder={placeholder}\r\n      onChange={handleFilter}\r\n    />\r\n  );\r\n};\r\n\r\nexport default NameSearchBar;\r\n","import { useRef } from \"react\";\r\nimport { SearchBarStyled } from \"./SearchBarStyles\";\r\nimport useKeyPress from \"../hooks/useKeyPress\";\r\n\r\nconst TagSearchBar = ({\r\n  students,\r\n  setStudents,\r\n  placeholder,\r\n  searchName,\r\n  searchTag,\r\n  regexName,\r\n  regexTag,\r\n  filteredTag\r\n}) => {\r\n  const studentsCopy = useRef([...students]); // I use a useRef so as to keep a copy of students' first state before the re-render changes.\r\n  const backSpacePress = useKeyPress(\"Backspace\");\r\n  const beforeStudentsChange = useRef();\r\n\r\n  const handleFilter = (e) => {\r\n    searchTag.current = e.target.value.replaceAll(/[\\\\]/gi, \"\\\\\\\\\");\r\n    regexTag.current = new RegExp(`^(${searchTag.current})`, \"i\");\r\n    if (searchName.current) {\r\n      filteredTag = students.filter(({ tags }) => {\r\n        /* This checks for each value in the array of tags and \r\n        runs a regex test on each one individually.\r\n        This is done so that the user can search for students with multiple tags as\r\n        long as they contain the searched for tag. */\r\n        return tags.some((tag) => regexTag.current.test(tag));\r\n      });\r\n    } else {\r\n      filteredTag = studentsCopy.current.filter(({ tags }) => {\r\n        return tags.some((tag) => regexTag.current.test(tag));\r\n      });\r\n    }\r\n\r\n    if (searchTag.current === \"\" && searchName.current === \"\") {\r\n      // If both filters are empty then return everything back to default student listing.\r\n      setStudents(studentsCopy.current);\r\n    } else if (backSpacePress) {\r\n      setStudents(\r\n        beforeStudentsChange.current.filter(({ firstName, lastName, tags }) => {\r\n          if (\r\n            regexName.current !== \"\" &&\r\n            searchName.current &&\r\n            !searchTag.current\r\n          ) {\r\n            return (\r\n              regexName.current.test(firstName) ||\r\n              regexName.current.test(lastName) ||\r\n              regexName.current.test(firstName + \" \" + lastName)\r\n            );\r\n          } else {\r\n            return tags.some((tag) => regexTag.current.test(tag));\r\n          }\r\n        })\r\n      );\r\n    } else {\r\n      setStudents((prevStudents) => {\r\n        if (filteredTag.length !== prevStudents.length) {\r\n          // When student changes length save a copy of the prev state to beforeStudentsChange.current\r\n          beforeStudentsChange.current = [...prevStudents];\r\n        }\r\n        return filteredTag;\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SearchBarStyled\r\n      type=\"text\"\r\n      placeholder={placeholder}\r\n      onChange={handleFilter}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TagSearchBar;\r\n","import \"./sass/styles.scss\";\nimport { useEffect, useState, useRef } from \"react\";\nimport Student from \"./components/Student\";\nimport NameSearchBar from \"./components/NameSearchBar\";\nimport TagSearchBar from \"./components/TagSearchBar\";\n\nexport default function App() {\n  const [students, setStudents] = useState(null);\n  const studentsWithTags = useRef();\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [error, setError] = useState(null);\n  const searchName = useRef(\"\");\n  const searchTag = useRef(\"\");\n  const regexName = useRef(null);\n  const regexTag = useRef(null);\n  const filteredName = useRef([]);\n  const filteredTag = useRef([]);\n\n  const fetchData = () => {\n    const userData = \"https://api.hatchways.io/assessment/students\";\n\n    fetch(userData)\n      .then((res) => res.json())\n      .then(\n        (data) => {\n          studentsWithTags.current = data.students;\n          // This adds a tags property in each student object\n          studentsWithTags.current.forEach((student) => {\n            student[\"tags\"] = [];\n          });\n          setStudents(studentsWithTags.current);\n          setIsLoaded(true);\n        },\n        (err) => {\n          setIsLoaded(true);\n          setError(err);\n        }\n      );\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  } else if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n      <div className=\"App wrapper\">\n        <NameSearchBar\n          students={students}\n          setStudents={setStudents}\n          placeholder={\"Search by name\"}\n          nameOrTag={\"name\"}\n          searchName={searchName}\n          searchTag={searchTag}\n          regexName={regexName}\n          regexTag={regexTag}\n          filteredName={filteredName.current}\n        />\n        <TagSearchBar\n          students={students}\n          setStudents={setStudents}\n          placeholder={\"Search by tag\"}\n          nameOrTag={\"tag\"}\n          searchName={searchName}\n          searchTag={searchTag}\n          regexName={regexName}\n          regexTag={regexTag}\n          filteredTag={filteredTag.current}\n        />\n        {students.length !== 0 &&\n          students.map((student, index) => (\n            <Student\n              key={\"student\" + student.id}\n              student={student}\n              students={students}\n              setStudents={setStudents}\n              studentIndex={index}\n              searchTag={searchTag}\n              regexTag={regexTag}\n            />\n          ))}\n      </div>\n    );\n  }\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}